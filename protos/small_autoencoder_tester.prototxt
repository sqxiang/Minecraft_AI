name: "MinecraftAutoencoder"
input: "data"
input_shape {
  dim: 1
  dim: 1
  dim: 32
  dim: 32
}


layer {
  name: "encoder"
  type: "InnerProduct"
  bottom: "data"
  top: "encodeout"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "gaussian"
      std: 1
      #sparse: 10
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "encode1neuron"
  type: "Sigmoid"
  bottom: "encodeout"
  top: "encodeneuronout"
}

#layer {
#  name: "relu1"
#  type: "ReLU"
#  bottom: "encodeout"
#  top: "encodeneuronout"
#}

#layer {
#  name: "tan1"
#  type: "TanH"
#  bottom: "encodeout"
#  top: "encodeneuronout"
#}

layer {
  name: "decoder"
  type: "InnerProduct"
  bottom: "encodeneuronout"
  top: "decodeout"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 1
      #sparse: 10
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "decodeneuron"
  type: "Sigmoid"
  bottom: "decodeout"
  top: "decodeneuronout"
}

#layer {
#  name: "relu2"
#  type: "ReLU"
#  bottom: "decodeout"
#  top: "decodeneuronout"
#}

#layer {
#  name: "tan2"
#  type: "TanH"
#  bottom: "decodeout"
#  top: "decodeneuronout"
#}

layer {
  name: "reshaper"
  type: "Reshape"
  bottom: "decodeneuronout"
  top: "final_data"
  reshape_param {
    shape {
      dim: 1  # copy the dimension from below
      dim: 1
      dim: 32
      dim: 32
    }
  }
}

