name: "testnet"

layer {
  name: "training"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
  	source: "mydataset.txt"
    batch_size: 1024
  }
  #transform_param {
  #  scale: 0.00390625
  #}
  include: { phase: TRAIN }
}

layer {
  name: "testing"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
  	source: "mydataset.txt"
    batch_size: 1
  }
  #transform_param {
  #  scale: 0.00390625
  #}
  include: { phase: TEST }
}


layer {
  name: "ip1"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  bottom: "data"
  top: "ip1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 18
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  bottom: "ip1"
  top: "ip2"
}



layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss_output"
}

